import centrales.*
import ciudades.*

// no me estaria tomando los describes
test "la centralAtomica burns con 10 varillas produce 1 mkwh en springfield"{
		centralAtomica.varillasDeUranio(10)
		assert.equals(1,centralAtomica.produccionEnergetica(springfield))
		
}
test "la centralDeCarbon con capacidad 20, produce 18.5 mkwh en springfield"{
	centralDeCarbon.capacidad(20)
	assert.equals(18.5,centralDeCarbon.produccionEnergetica(springfield))
}
test "la central eolica produce  mkwh en springfield"{
	assert.equals(2,centralEolica.produccionEnergetica(springfield))
}
test "las centrales contaminantes de springfield son centralDeCarbon"{
	springfield.agregarCentral(centralEolica)
	springfield.agregarCentral(centralAtomica)
	springfield.agregarCentral(centralDeCarbon)
	springfield.necesidadEnergetica(20)
	centralAtomica.varillasDeUranio(10)
	centralDeCarbon.capacidad(20)
	assert.that(springfield.centralesContaminantes().contains(centralDeCarbon))
	assert.equals(1,springfield.centralesContaminantes().size())
}
test "con todas las centrales, springfield cubrio su necesidad energetica de 20mkwh"{
	springfield.agregarCentral(centralEolica)
	springfield.agregarCentral(centralAtomica)
	springfield.agregarCentral(centralDeCarbon)
	springfield.necesidadEnergetica(20)
	centralAtomica.varillasDeUranio(10)
	centralDeCarbon.capacidad(20)
	assert.that(springfield.cubrioNecesidadesEnergeticas())
}
test "con lo anterior, springfield esta al horno si posse una necesdidad de 30 mkwh"{
	springfield.agregarCentral(centralEolica)
	springfield.agregarCentral(centralAtomica)
	springfield.agregarCentral(centralDeCarbon)
	springfield.necesidadEnergetica(30)
	centralAtomica.varillasDeUranio(10)
	centralDeCarbon.capacidad(20)
	assert.that(springfield.alHorno())
}
